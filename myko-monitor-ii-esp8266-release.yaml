substitutions:
  update_url: https://vdwals.github.io/esphome-sp/
  mqtt_host: 10.0.0.1
  mqtt_password: "123456"

esphome:
  name: myko-monitor-mk-ii
  friendly_name: MykoMonitor
  # Automatically add the mac address to the name
  # so you can use a single firmware for all devices
  name_add_mac_suffix: true

  # This will allow for project identification,
  # configuration and updates.
  project:
    name: vdwals.myko-monitor
    version: "2024.8.0"
  
  on_boot:
    priority: -100
    then:
      - delay: 4min
      - deep_sleep.enter: deep_sleep_1

esp8266:
  board: esp01_1m

# To be able to get logs from the device via serial and api.
logger:
  baud_rate: 0

# API is a requirement of the dashboard import.
api:

# OTA is required for Over-the-Air updating
ota:
  - platform: http_request
    name: Firmware Update
    source: ${update_url}manifest.json
    on_begin:
      then:
        - deep_sleep.prevent: deep_sleep_1
    on_end:
      then:
        - deep_sleep.allow: deep_sleep_1
    on_error:
      then:
        - deep_sleep.allow: deep_sleep_1

http_request:

# This should point to the public location of this yaml file.
dashboard_import:
  package_import_url: github://vdwals/esphome-sp/myko-monitor-ii-esp8266-release.yaml@main

wifi:
  # Set up a wifi access point using the device name above
  ap:

# In combination with the `ap` this allows the user
# to provision wifi credentials to the device.
captive_portal:

## Status LED for Issues
status_led:
  pin: GPIOXX

## CO2-Sensor
uart:
  rx_pin: 3
  tx_pin: 1
  baud_rate: 9600

sensor:
  - platform: mhz19
    id: co2_sensor
    co2:
      name: "CO2 Wert"
    temperature:
      name: "Ger√§te-Temperatur"
    update_interval: 300s
    automatic_baseline_calibration: false
    warmup_time: 3min

  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name: "WiFi Signal dB"
    id: wifi_signal_db
    update_interval: 300s
    entity_category: "diagnostic"

  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_signal_db
    name: "WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "Signal %"
    entity_category: "diagnostic"
    device_class: ""

button:
  - platform: template
    name: "Kalibrieren"
    on_press:
      - mhz19.calibrate_zero: co2_sensor

binary_sensor:
  - platform: status
    name: "Sensor Status"

## Deep-Sleep
## GPIO16 connected to RST
deep_sleep:
  run_duration: 10s
  sleep_duration: 5min
  id: deep_sleep_1

## MQTT Settings
mqtt:
  broker: ${mqtt_host}
  username: mykomonitor
  password: ${mqtt_password}
  discovery: true
  discovery_prefix: homeassistant
  topic_prefix: "mykomonitor/${name}"

